name: cyphal
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - '*'
jobs:
  stm32f103:
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get install -y gcc-arm-none-eabi
          elif [ "${{ runner.os }}" == "Windows" ]; then
            choco install -y gcc-arm-embedded make cmake
          fi
        shell: bash

      - name: Build Cyphal binary
        run: make cyphal

      - name: Upload .bin file
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v3
        with:
          name: cyphal_firmware.bin
          path: build/obj/example.bin

  sitl:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
          sudo apt-get install -y gcc-arm-none-eabi linux-modules-extra-$(uname -r)

      - run: make sitl_cyphal
      - run: |
          export REG_DATA_TYPE_PATH="$PWD/Libs/Cyphal/Libs/public_regulated_data_types/uavcan $PWD/Libs/Cyphal/Libs/public_regulated_data_types/reg"
          make run &
          cd scripts/tools/cyphal
          source init.sh -i slcan0 -n 127 -v
          ./specification_checker.py
